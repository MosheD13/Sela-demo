name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'application/**'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
    paths:
      - 'application/**'
      - 'Dockerfile'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Use latest LTS version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Test endpoint response
        run: |
          response=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" http://localhost:3000/your-endpoint)
          body=$(echo $response | sed -e 's/HTTPSTATUS\:.*//g')
          status=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          if [ $status -ne 200 ]; then
            echo "Error: Endpoint did not return 200. Returned $status"
            exit 1
          fi

      - name: Build Docker image
        if: success()
        run: docker build -t moshedana/sela-demo .

      - name: Log in to Docker Hub
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
          echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

      - name: Push Docker image to Docker Hub
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push moshedana/sela-demo

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploying to platform...
        run: echo "Deploying to platform..."
